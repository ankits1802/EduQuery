// This is an automatically generated file. Please do not edit this file directly.

'use server';

/**
 * @fileOverview Generates answers to textbook-related questions and includes relevant citations.
 *
 * - generateCitations - A function that handles the question answering and citation generation process.
 * - GenerateCitationsInput - The input type for the generateCitations function.
 * - GenerateCitationsOutput - The return type for the generateCitations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateCitationsInputSchema = z.object({
  question: z.string().describe('The question to be answered.'),
  textbookContent: z
    .string()
    .describe('The textbook content to be used as context for answering the question.'),
});
export type GenerateCitationsInput = z.infer<typeof GenerateCitationsInputSchema>;

const GenerateCitationsOutputSchema = z.object({
  answer: z.string().describe('The answer to the question.'),
  citations: z.array(z.string()).describe('The relevant citations for the answer.'),
});
export type GenerateCitationsOutput = z.infer<typeof GenerateCitationsOutputSchema>;

export async function generateCitations(input: GenerateCitationsInput): Promise<GenerateCitationsOutput> {
  return generateCitationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateCitationsPrompt',
  input: {schema: GenerateCitationsInputSchema},
  output: {schema: GenerateCitationsOutputSchema},
  prompt: `You are an AI assistant that answers questions based on the provided textbook content and provides citations for your answers.

  Textbook Content: {{{textbookContent}}}

  Question: {{{question}}}

  Answer:`,
});

const generateCitationsFlow = ai.defineFlow(
  {
    name: 'generateCitationsFlow',
    inputSchema: GenerateCitationsInputSchema,
    outputSchema: GenerateCitationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
